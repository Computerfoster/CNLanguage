#define N  100
#define SIZE 30
#include <stdio.h>
#include <string.h>
#include <conio.h>
struct student 
{
    char num[SIZE];
    char name[SIZE];
    char tel[SIZE];
};

/*函数声明 */
void myprint();/* 显示菜单 */
int mycreat(struct student*p,int n); /* 输入通讯录 */
void mydisplay(struct student*p,int n); /* 显示通讯录 */
void mysearch(struct student*p,int n); /* 查找 */
void mymodify(struct student*p,int n); /* 修改通讯录 */
int myadd(struct student*p,int n); /* 增加通讯录 */
int mydelete(struct student*p,int n); /* 删除 */
void mysort(struct student*p,int n); /* 排序 */
void sch_num(struct student*p,int n); /* 按学号查找 */
void sch_name(struct student*p,int n); /* 按姓名查找 */
int loadinfo(struct student*p,int n); /* 载入通讯录信息 */
int saveinfo(struct student*p,int n); /* 保存通讯录信息 */

void main()
{
    /* 文件定义 */
    char choose,yes_no ;
    struct student record[N]; /* 存放通讯录信息,共100条 */
       int total=0,flag ; /* 通讯录总数 */
   
    total=loadinfo(record,N); /* 从文件读取记录信息,不超过100条 */
    do 
    {
        myprint();/* 显示菜单 */
       
        printf("       请选择：       ");
        scanf(" %c",&choose);
        switch(choose)
        {
        case '1' :
            total=mycreat(record,total);
               break ;
        case '2' :
            mydisplay(record,total);
               break ;
        case '3' : 
            mysearch(record,total);
               break ;
        case '4' :
            mymodify(record,total);
                break ;
        case '5' :
            total=myadd(record,total);
            break ;
        case '6' :
            total=mydelete(record,total);
                break ;
        case '7' :
            mysort(record,total);
                break ;
        case '8' :
            flag=saveinfo(record,total);
            if(flag==1)
               printf("\n保存成功!\n");
            else 
               printf("\n保存失败!\n");
                         break ;
        case '0' :
               break ;
               default :
            printf("\n           %c为非法选项!\n",choose);
        }
        if(choose=='0')break ;
        printf("\n         要继续选择吗(Y/N)?");
        do 
        {
             scanf(" %c",&yes_no);
        } while(yes_no!='Y'&&yes_no!='y'&&yes_no!='N'&&yes_no!='n');
    }while(yes_no=='Y'||yes_no=='y');
}

void myprint()/* 显示菜单信息 */
{
    printf("\n\n\n\n\n");
    printf("                                             \n");
    printf("        请输入选项编号(0--7)                 \n");
    printf("               1---批量输入通讯录                \n");
    printf("               2---显示通讯录                \n");
    printf("               3---查询通讯录                \n");
    printf("               4---修改通讯录                \n");
    printf("               5---添加通讯录              \n");
    printf("               6---删除通讯录              \n");
    printf("               7---排序通讯录                \n");
    printf("               8---保存通讯录                \n");
    printf("               0---退出                      \n");
    printf("                                             \n");
}

int mycreat(struct student*p,int n) /* 批量输入学生信息 */
{
    int i=0 ;
    int m ;
    printf("添加前的记录，共有 <%d>个 ：\n",n);
    printf("\n记录号        学号         姓名        电话号码\n");
    i=0 ;
    while((i<n)&&(strcmp(p->num,"")!=0))
    {
        printf("%d:  %15s%15s%15s\n",i+1,p->num,p->name,p->tel);
        i++;
        p++;
    }
    
    printf("\n请输入要输入的学生人数(< %d):  ",N-n);
    scanf("%d",&m);
    i=0 ;
    while(i<m)
    {
        printf("\n");
        printf("请输入第%d个记录:\n",i+1);
        printf("学号:");
        do 
        {
            gets(p->num);
        }while(strcmp(p->num,"")==0);
        printf("姓名:");
        gets(p->name);
        printf("电话号码:");
        gets(p->tel);
        p++;
        i++;
    }
    return m+n ;
}

void mydisplay(struct student*p,int n) /* 显示学生信息 */
{
    /*clrscr();*/
    int i=0 ;
    printf("\n记录号        学号         姓名        电话号码\n");
    while(i<n)
    {
        printf("%d:   %15s%15s%15s\n",i+1,p->num,p->name,p->tel);
        p++;
        i++;
    }
}


void mysearch(struct student*p,int n) /* 查找指定学生 */
{
    char c ;
    mydisplay(p,n);
    printf("\n按学号查询(h),还是按姓名查询(m)?");
    scanf(" %c",&c);
    if(c=='h'||c=='H')
    sch_num(p,n);
      else if(c=='m'||c=='M')
          sch_name(p,n);
    else 
    printf("\n非法字符!\n");
    
}

void sch_num(struct student*p,int n) /* 按学号查询 */
{
    int i,flag=0 ;
    char nm[10];
    printf("\n请输入要查询记录的学号:");
    scanf("%s",nm);
    for(i=0;i<n;i++)
      if(strcmp(nm,p[i].num)==0)
     {
        printf("\n    学号         姓名        电话号码\n");
        printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        flag=1 ;
     }
     if(flag==0)
     printf("无此人!\n");
}

void sch_name(struct student*p,int n) /* 按姓名查询 */
{
    int i,flag=0 ;
    char nam[10];
    printf("\n请输入要查询记录的姓名:");
    scanf("%s",nam);
    for(i=0;i<n;i++)
    if(strcmp(nam,p[i].name)==0)
    {
        printf("\n        学号         姓名        电话号码\n");
        printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        flag=1 ;
    }
    if(flag==0)
    printf("无此人!\n");
}

void mymodify(struct student*p,int n) /* 修改学生信息 */

{
    int i ;
    char nam[10];
    mydisplay(p,n);
    printf("\n请输入要修改记录的姓名:");
    scanf("%s",nam);
    for(i=0;i<n;i++,p++)
    if(strcmp(nam,p->name)==0)break ;
      if(i==n)
      printf("无此人!\n");
    else 
    {
        printf("请输入正确的学号:");
        do 
        {
            gets(p->num);
        }while(strcmp(p->num,"")==0);
        printf("请输入正确的姓名:");
        gets(p->name);
        printf("请输入正确的电话号码:");
        gets(p->tel);
    }
}

int myadd(struct student*p,int n) /* 增加学生信息 */
{
    int i=0 ;
    char c ;
    struct student t,*q ;
    printf("添加前的记录：\n");
    printf("\n   学号              姓名           电话号码\n");
    i=0 ;
    q=p ;
    /* 显示原有记录信息 */
    while(i<n)
    {
        printf("%15s%15s%15s\n",q->num,q->name,q->tel);
        i++;
        q++;
    }
    do 
    {
        printf("请输入新记录的学号：\n");
        do 
        {
            gets(t.num);
        } while(strcmp(t.num,"")==0); /* 学号不能为空 */
        printf("请输入新记录的姓名： ");
        gets(t.name);
        printf("请输入新记录的电话号码： ");
        gets(t.tel);
        for(i=0;i<n;i++)
        if(strcmp(t.num,(p+i)->num)==0||strcmp(t.tel,(p+i)->tel)==0)
        {
            printf("学号或电话号码重,要重新输入吗(Y/N)?");
            c=getchar();
            putchar('\n');
            break ;
        }
        /* 找到最后，没有重复 */
        if(i==n)
        {
            *(p+i)=t ;
            printf("添加后的记录:\n");
            printf("\n      学号           姓名              电话号码\n");
            for(i=0;i<n+1;i++)
            printf("%15s%15s%15s\n",(p+i)->num,(p+i)->name,p[i].tel);
            break ;
        }
    }
    while(c=='y'||c=='Y');
    return n+1 ;
}

int mydelete(struct student*p,int n) /* 删除学生信息 */
{
    int i,x ;
    char c,nm[10],nam[10];
    printf("删除前的记录：\n");
    printf(" \n    学号             姓名              电话号码\n");
    for(i=0;i<n;i++)
    printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
    printf("按学号删除(h)，还是按姓名删除(m)?");
    scanf(" %c",&c);
    if(c=='h'||c=='H')
    {
        printf("\n请输入要删除记录的学号：");
        scanf("%s",nm);
        for(x=0;x<n;x++)
        if(strcmp(nm,p[x].num)==0)
        break ;
        /* 说明提前结束循环，找到人 */
        if(x<n)
        {
            for(i=x;i<n-1;i++)
            {
                p[i]=p[i+1];
            }
            printf("删除后的记录：\n");
            printf(" 学号             姓名              电话号码\n");
            for(i=0;i<n-1;i++)
            printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        }
        else 
        printf("无此人\n");
    }
    else 
    if(c=='m'||c=='M')
    {
        printf("\n请输入要删除记录的姓名：");
        scanf("%s",nam);
        for(x=0;x<n;x++)
        if(strcmp(nam,p[x].name)==0)
              break ;
        if(x<n)
        {
            for(i=x;i<N-1;i++)
            {
                p[i]=p[i+1];
            }
            printf("删除后的记录：\n");
            printf("  学号             姓名              电话号码\n");
            for(i=0;i<n-1;i++)
            printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        }
        else 
        printf("无此人\n");
    }
    else 
    printf("\n非法字符\n");
    return n-1 ;
}

void mysort(struct student*p,int n) /* 排序函数 */
{
    int j,i,k ;
    char c1,c2 ;
    struct student temp ;
    printf("\n排序前的记录:\n");
    printf("\n  学号           姓名            电话号码\n");
    for(i=0;i<n;i++)
    printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
    printf("\n按学号排序(h)，还是按姓名排序(m)?");
    scanf(" %c",&c1);
    if(c1=='h'||c1=='H')
    {
        printf("\n按升序排序（s），还是按降序排序（j）?");
        scanf(" %c",&c2);
        /* 升序 */
        if(c2=='s'||c2=='S')
        {
            for(i=0;i<n-1;i++)
            {
                k=i ;
                for(j=i;j<n;j++)
                if(strcmp(p[k].num,p[j].num)>0)
                k=j ;
                temp=p[k];
                p[k]=p[i];
                p[i]=temp ;
                
            }
            printf("\n排序后的记录:\n");
            printf("\n   学号            姓名            电话号码\n");
            for(i=0;i<n;i++)
            printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        }
      
        else if(c2=='j'||c2=='J')  /* 降序 */
        {
            for(i=0;i<n-1;i++)
            {
                k=i ;
                for(j=0;j<n;j++)
                if(strcmp(p[k].num,p[j].num)<0)
                k=j ;
                temp=p[k];
                p[k]=p[i];
                p[i]=temp ;
                
            }
            printf("排序后的记录:\n");
            printf("\n  学号           姓名            电话号码\n");
            for(i=0;i<n;i++)
            printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        }
        else printf("\n非法字符\n");
    }
   
    else if(c1=='m'||c1=='M') /* 按姓名排序 */
    {
        printf("\n按升序排序（s），还是按降序排序（j）? ");
        scanf(" %c",&c2);
        
        if(c2=='s'||c2=='S')
        {
            for(i=0;i<n-1;i++)
            {
                k=i ;
                for(j=0;j<n;j++)
                if(strcmp(p[k].name,p[j].name)>0)
                k=j ;
                temp=p[k];
                p[k]=p[i];
                p[i]=temp ;
            }
            printf("排序后的记录:\n");
            printf("\n   学号           姓名            电话号码\n");
            for(i=0;i<n;i++)
            printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        }
      
        else if(c2=='j'||c2=='J')  /* 降序 */
        {
            for(i=0;i<n-1;i++)
            {
                k=i ;
                for(j=i;j<n;j++)
                if(strcmp(p[k].name,p[j].name)<0)
                k=j ;
                temp=p[k];
                p[k]=p[i];
                p[i]=temp ;
                
            }
            printf("排序后的记录:\n");
            printf("\n  学号           姓名            电话号码\n");
            for(i=0;i<n;i++)
            printf("%15s%15s%15s\n",p[i].num,p[i].name,p[i].tel);
        }
        else printf("\n非法字符！\n");
    }
    else printf("\n非法字符！\n");
}

int loadinfo(struct student*p,int n) /* 载入通讯录信息 */
{
    FILE*fp ;
    int i,all=0 ;
    char filename[30]="txl.dat" ;
    fp=fopen(filename,"r");
    if(fp==NULL)
    {
    /* printf("\n***不能打开文件%s，或%s文件不存在!***",filename,filename); */
        return 0 ;
    }
    fscanf(fp,"%d\n",&all);
           if(all>N) /* 读取记录总数 */
        {
            printf("文件记录数太多，不能读取");
            return 0;
        }
    
    for(i=0;i<all;i++)/* 读取记录信息 */
    {
        fscanf(fp,"%s %s %s\n",p[i].num,p[i].name,p[i].tel);
    }
    fclose(fp);  /* 关闭文件 */
 return all ;
}

int saveinfo(struct student*p,int n)
{
    FILE*fp ;
    int i,all=0 ;
    char filename[30]="txl.dat" ; /*文件可以用记事本打开*/
    fp=fopen(filename,"w");
    if(fp==NULL)
    {
        printf("\n***不能建立或打开文件%s!***",filename);
        return 0 ;
    }
    fprintf(fp,"%d\n",n);
    for(i=0;i<n;i++)
    fprintf(fp,"%s %s %s\n",p[i].num,p[i].name,p[i].tel);
    fclose(fp);
    return 1 ;
}
